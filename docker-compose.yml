version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ruban_bleu_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ruban_bleu
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ruban_bleu_redis
    ports:
      - "6379:6379"

  # API Server
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: ruban_bleu_api
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ruban_bleu
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development-secret-key
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./apps/api:/app
      - api_node_modules:/app/node_modules
    command: sh -c "npm install && npx prisma generate && npx prisma migrate deploy && node server-full.js"

  # Web Application
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: ruban_bleu_web
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - web_node_modules:/app/node_modules
      - web_next:/app/.next
    command: sh -c "npm install && npm run dev"

volumes:
  postgres_data:
  api_node_modules:
  web_node_modules:
  web_next:
